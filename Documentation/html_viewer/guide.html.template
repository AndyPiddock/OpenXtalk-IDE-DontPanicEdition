<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    
    <title>LiveCode Guides</title>
    
    <link href="[[tDocsCSSFolder]]/bootstrap.min.css" rel="stylesheet">
    <link href="[[tDocsCSSFolder]]/userguide.css" rel="stylesheet">
    <link href="[[tDocsCSSFolder]]/codestyle.css" rel="stylesheet">
</head>
<body data-spy="scroll" data-target=".lc_docs_nav">


<div class="container bs-docs-container">

<div class="row">
<div class="col-md-3" >
    	<div class="bs-docs-sidebar hidden-print hidden-xs hidden-sm affix" data-offset-top="200" id="lc_userguide_nav" role="complementary">
           <div class="dropdown" style="margin-bottom:20px">
           	<button class="btn btn-default dropdown-toggle" type="button" id="dropdownMenu1" data-toggle="dropdown" aria-expanded="true"><span id="guide_name"></span> <span class="caret"></span></button>
           <ul class="dropdown-menu" role="menu"  id="guide_chooser_list">
           </ul>
           </div>
           <div id="nav_holder">
           
           
           </div>
        </div>
    </div>
	<div class="col-md-9" role="main">
    	<div style="position:relative" id="documentation" style="position:relative">
    		<img src="spinner.gif" style="margin:auto; display:block; margin-top:100px; width:10%; height:10%" />
        </div>
    </div>
	
</div>
</div>
    
    <script src="[[tDocsJSFolder]]/jquery-1.11.1.min.js"></script>
    <script src="[[tDocsJSFolder]]/bootstrap.min.js"></script>
    <script src="[[tDocsJSFolder]]/marked.js"></script>
    <script src="[[tDocsJSFolder]]/highlight.pack.js"></script> 
    
    <script charset="UTF-8" src="[[tDataPath]]"></script>
    <script>	
   
   $(document).ready(function(e) {
   		console.log(tUserGuideData.guides);
   		
   		var navigation_chooser_html = '';
		$.each(tUserGuideData.guides, function( index, value ) {
			navigation_chooser_html += '<li role="presentation" class="guide_list_item"><a role="menuitem" tabindex="-1" guide="'+index+'" guide_name="'+value.name+'">'+value["display name"]+'</a></li>';
		});
		
		$("#guide_chooser_list").html(navigation_chooser_html);
		
   		var tLastLoadedGuide;
   		if(guideExists(tLastLoadedGuide) == false){
   		 	tLastLoadedGuide = guideFirst();
   		}	
   		
   		loadGuide(tLastLoadedGuide);
   		
   		function loadGuide(pGuideName){
   			renderMarkdown(pGuideName);
   		}
   		
   		function guideExists(pGuideName){
   			$.each(tUserGuideData.guides, function( index, value ) {
   				if(index == pGuideName) return true;
   			});
   			return false;
   		}
   		
   		function guideFirst(){
   			for (first in tUserGuideData.guides) break;
   			return first;
   		}
   
   		function renderMarkdown(pGuideIndex){
			var renderer = new marked.Renderer();
			var navigation_html = '<ul class="nav bs-docs-sidenav lc_docs_nav">';
			var current_level = 1;
		
			renderer.heading = function (text, level) {
			  var escapedText = text.toLowerCase().replace(/[^\w]+/g, '-');
		
				if(level < 3){
				
					if(level == current_level){
						// We are on the same level so just create another li
						navigation_html += '</li><li><a href="#'+escapedText+'">'+text+'</a>';	
					} else if(level < current_level){
						// we've gone up a level so just close of the sub ul and add an li
						navigation_html += '</li></ul><li><a href="#'+escapedText+'">'+text+'</a>';
						current_level = level;
					} else {
						// we've gone down a level so create a sub ul
						navigation_html += '<ul class="nav"><li><a href="#'+escapedText+'">'+text+'</a>';
						current_level = level;
					}
				}
				return '<h' + level + ' id="' + escapedText + '">' +text + '</h' + level + '>';
			
			},
			
			renderer.image = function (href, title, text) 
			{
				var tGuideLocation = tUserGuideData.guides[pGuideIndex].location;
				
				var image_parts;
				image_parts = href.split("/");
				var image_file;
				image_file = image_parts[image_parts.length - 1];
				
				if (tGuideLocation == 'repo')
				{
					return '<img src="[[tRepoGuidesFolder]]/images/' + image_file + '" />';
				}
				else
				{
					return '<img src="[[tIDEGuidesFolder]]/images/' + image_file + '" />';
				}
			},
		
			// Set the core markdown
			$("#documentation").html(marked(tUserGuideData.guides[pGuideIndex].data, { renderer: renderer }));
			$("#guide_name").html(tUserGuideData.guides[pGuideIndex]["display name"]);
			$("#nav_holder").html(navigation_html + "</ul>");
			$("#documentation").scrollspy('refresh');
			$("#documentation img").addClass("img-responsive");
			
			$('pre code').each(function(i, block) {
			//console.log(block);
    		hljs.highlightBlock(block);
 		});	
   		}
   		
   		$('#guide_chooser_list').on("click","a",function(e){
   			e.preventDefault();
   			
   			$("#guide_chooser_list li").removeClass("active");
   			$(this).parent().addClass("active");
   		
   			loadGuide($(this).attr("guide"));
   			$(this).html(tUserGuideData.guides[$(this).attr("guide")]["display name"]);
		});
   		
   		
   });
    </script>
</body>
</html>